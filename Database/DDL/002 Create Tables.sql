-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.collaborator
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    email character varying(50) COLLATE pg_catalog."default" NOT NULL,
    unit_id integer NOT NULL,
    team_id integer,
    CONSTRAINT pk_collaborator PRIMARY KEY (id),
    CONSTRAINT uk_name UNIQUE (name),
    CONSTRAINT uk_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS public.collaborator_skill
(
    collaborator_id integer NOT NULL,
    skill_id integer NOT NULL,
    level smallint NOT NULL,
    CONSTRAINT pk_collaborator_skill PRIMARY KEY (collaborator_id, skill_id)
);

CREATE TABLE IF NOT EXISTS public.skill
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying(50) COLLATE pg_catalog."default" NOT NULL,
    skill_type_id integer NOT NULL,
    CONSTRAINT skill_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.team
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT team_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.unit
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT unit_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.skill_type
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pk_skill_type PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.collaborator
    ADD CONSTRAINT fk_unit FOREIGN KEY (unit_id)
    REFERENCES public.unit (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.collaborator
    ADD FOREIGN KEY (team_id)
    REFERENCES public.team (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.collaborator_skill
    ADD CONSTRAINT fk_skill FOREIGN KEY (skill_id)
    REFERENCES public.skill (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.collaborator_skill
    ADD CONSTRAINT fk_collaborator FOREIGN KEY (collaborator_id)
    REFERENCES public.collaborator (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.skill
    ADD CONSTRAINT fk_skill_type FOREIGN KEY (skill_type_id)
    REFERENCES public.skill_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;